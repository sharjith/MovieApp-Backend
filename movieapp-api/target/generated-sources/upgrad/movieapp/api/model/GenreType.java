package upgrad.movieapp.api.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 * GenreType
 */
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-04-02T17:35:00.595+05:30")

public class GenreType   {
  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("genre")
  private String genre = null;

  @JsonProperty("description")
  private String description = null;

  public GenreType id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier of the genre in a standard UUID format generated by API backend
   * @return id
  **/
  @ApiModelProperty(value = "Unique identifier of the genre in a standard UUID format generated by API backend")

  @Valid

  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public GenreType genre(String genre) {
    this.genre = genre;
    return this;
  }

  /**
   * Title of the genre
   * @return genre
  **/
  @ApiModelProperty(value = "Title of the genre")


  public String getGenre() {
    return genre;
  }

  public void setGenre(String genre) {
    this.genre = genre;
  }

  public GenreType description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the genre
   * @return description
  **/
  @ApiModelProperty(value = "Description of the genre")


  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenreType genreType = (GenreType) o;
    return Objects.equals(this.id, genreType.id) &&
        Objects.equals(this.genre, genreType.genre) &&
        Objects.equals(this.description, genreType.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, genre, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenreType {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    genre: ").append(toIndentedString(genre)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

